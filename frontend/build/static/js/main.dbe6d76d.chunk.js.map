{"version":3,"sources":["model/CV.js","model/User.js","model/Etudiant.js","Constants.js","service/UserService.js","service/EtudiantService.js","components/EtudiantRegister.js","service/LoginService.js","components/Login.js","components/Home.js","components/HeaderComponent.js","service/CVService.js","components/gestionnaire/ListEtudiantComponent.js","components/HomeEtudiant.js","service/EmployeurService.js","components/employeur/EmployeurRegister.js","components/RegisterComponent.js","components/Logout.js","model/Employeur.js","model/Stage.js","service/StageService.js","components/validation/ValidationChampVide.js","components/validation/ValidationDate.js","components/stage/CreateStageComponent.js","components/gestionnaire/GestionnaireProfile.js","model/Gestionnaire.js","service/GestionnaireService.js","components/gestionnaire/GestionnaireUpdate.js","components/gestionnaire/GestionnaireOptions.js","components/gestionnaire/GestionnaireListeStageComponent.js","components/employeur/ListStagesEmployeur.js","service/CandidatureService.js","components/ApplicationStageComponent.js","components/ListeCandidaturesEtudiantComponent.js","components/gestionnaire/SelectionnerEtudiantComponent.js","components/StageVeto.js","App.js","serviceWorker.js","index.js"],"names":["CV","id","name","status","data","User","password","email","desc","Etudiant","matricule","nom","prenom","programme","telephone","adresse","statutStage","cv","API_URL","fetch","method","then","r","json","catch","error","baseURL","ETUDIANT_GET","axios","get","etudiant","headers","body","JSON","stringify","formSchema","Yup","shape","required","min","EtudiantRegister","props","state","event","this","setState","target","value","className","style","background","initialValues","validationSchema","onSubmit","values","actions","Promise","resolve","setTimeout","UserService","getByEmail","val","setFieldError","EtudiantService","post","resetForm","setStatus","message","setSubmitting","console","log","reason","isSubmitting","isValid","isValidating","type","placeholder","maxLength","msg","as","role","href","Component","res","storage","user","window","localStorage","setItem","removeItem","Login","isNotlogin","handleChange","bind","handleSubmit","preventDefault","LoginService","login","undefined","history","push","onChange","Home","location","search","replace","reload","NotLoggedInNav","Nav","Link","GestionnaireNav","EmployeurNav","EtudiantNav","NavType","toUpperCase","HeaderComponent","getItem","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","CV_URL","idEtudiant","formData","put","FormData","append","ListEtudiantsComponent","downloadCV","url","request","responseType","downloadUrl","URL","createObjectURL","Blob","link","document","createElement","setAttribute","appendChild","click","remove","handleChangeText","filter","handleChangeRadio","statut","etudiants","isCVApprouve","CVService","updateCVStatus","onClick","getEtudiants","includes","map","key","renderColonneApprobation","HomeEtudiant","onChangeHandler","checkMimeType","file","files","hasUploadedCV","err","types","x","length","every","displayInvalidFileMessage","displaySubmitCVButton","inputRef","React","createRef","CVInfoMessage","hasAlreadyCV","createCV","accept","ref","defaultValue","displayCVMessage","color","employeur","nomEntreprise","max","matches","EmployeurRegister","rol","EmployeurService","Register","Tabs","activeKey","onSelect","Tab","eventKey","title","Logout","logout","Employeur","Stage","titre","description","exigences","dateDebut","dateFin","nbHeuresParSemaine","salaire","nbAdmis","dateLimiteCandidature","ville","etudiantsAdmits","STAGES_URL","idEmployeur","idStage","stage","response","ValidationChamp","field","ValidationDate","isRequired","CreateStageComponent","sended","validate","component","disabled","feedBack","withFormik","mapPropsToValues","today","Date","startDate","finalDate","limitApplicationDate","errors","saveCurrentEmployee","employee","getById","formikBag","StageService","createStage","GestionnaireProfile","gestionnaire","Gestionnaire","newPassword","confirmPassword","oneOf","GestionnaireUpdate","GestionnaireService","getByPassword","GestionnaireOptions","Container","defaultActiveKey","Row","Col","sm","Item","Content","Pane","GestionnaireListStageComponent","stages","handleClick","getStagesApprouves","ouvert","ListStagesEmployeur","employeurId","addStage","getStagesByEmployeurId","candidature","ApplicationStageComponent","hasValidCV","hasApplied","getEtudiantById","getStagesEtudiant","CandidatureService","displayWarningMessage","ListeCandidaturesEtudiantComponent","candidatures","getByEtudiant","SelectionnerEtudiantComponent","etudiantsPermis","disabledButtons","addAllEtudiants","removeAllEtudiants","confirmerChoix","annulerChoix","getStageById","match","params","getEtudiantsByProgramme","Array","fill","getEtudiantsByStageId","bouttons","stageEtudiants","index","param","e","oldState","newEtudiantsPermis","newDisabledButtons","newList","updatedList","addEtudiants","AddToList","RemoveFromList","ListStagesComponent","handleCloseSnackbar","showSnackbar","handleShowSnackbar","ShowStage","getStages","i","Snackbar","open","autoHideDuration","onClose","severity","useState","showModal","setShowModal","handleCloseModal","toggleBtns","isApprouved","getElementsByName","a","updateStage","parseInt","Button","Modal","size","show","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","xs","md","Footer","Alert","elevation","App","path","exact","StageVeto","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbe6d76d.chunk.js","sourcesContent":["export default class CV {\r\n    id = \"\";\r\n    name = \"\";\r\n    status = \"\";\r\n    data = [];\r\n}","export default class User{\r\n    id;\r\n    password = \"\";\r\n    email = \"\";\r\n    desc = \"\";\r\n}","import CV from \"./CV\";\r\nimport User from \"./User\";\r\n\r\nexport default class Etudiant extends User {\r\n    id;\r\n    matricule = \"\";\r\n    password = \"\";\r\n    nom = \"\";\r\n    prenom = \"\";\r\n    programme = \"\";\r\n    email = \"\";\r\n    telephone = \"\";\r\n    adresse = \"\";\r\n    statutStage = \"\";\r\n    stage;\r\n    cv = new CV() ;\r\n}","  \r\n// For Best Practices https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables\r\n//export const API_URL = 'http://localhost:5000'\r\nexport const API_URL = 'http://veilledeploiementaws-env.eba-qpmjbpdq.us-east-1.elasticbeanstalk.com/'\r\n","import { API_URL } from '../Constants';\r\n\r\nclass UserService {\r\n    async getByEmail(email) {\r\n        let data;\r\n        await fetch( API_URL + \"/users/get/\" + email, {method: \"GET\"})\r\n        .then(r => data = r.json())\r\n        .catch(error => data = {});\r\n        return data;\r\n        }\r\n\r\n}\r\n\r\nexport default new UserService()","import axios from 'axios';\r\nimport { API_URL } from '../Constants';\r\n\r\nconst ETUDIANTS_URL = API_URL + \"/etudiants/findAll\";\r\nconst baseURL = API_URL + \"/etudiants\";\r\nconst ETUDIANT_GET = API_URL + \"/etudiants/get\";\r\n\r\nclass EtudiantService{\r\n\r\n    getEtudiants(){\r\n        return axios.get(ETUDIANTS_URL);\r\n    }\r\n\r\n    getEtudiantById(id){\r\n        return axios.get(ETUDIANT_GET + \"?idEtudiant=\" + id);\r\n    }\r\n\r\n\r\n    getEtudiantsByProgramme(programme){\r\n        return axios.get(ETUDIANT_GET + \"/\" + programme);\r\n    }\r\n\r\n    async getByEmail(email){\r\n        let data;\r\n        await fetch(baseURL +\"/email?email=\" +email, {method: \"GET\"} )\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n\r\n    async post(etudiant){\r\n        fetch(baseURL + \"/create\",\r\n            {method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(etudiant)} )\r\n            .then(r => r.json());\r\n    }\r\n}\r\n\r\nexport default new EtudiantService()","import React, { Component } from \"react\";\r\nimport Etudiant from \"../model/Etudiant\";\r\nimport * as Yup from 'yup';\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport UserService from \"../service/UserService\";\r\nimport EtudiantService from \"../service/EtudiantService\";\r\n\r\n\r\nconst formSchema = Yup.object().shape({\r\n\r\n    email: Yup.string()\r\n        .required('Veuillez saisir un email valide')\r\n        .email(\"Courriel inavalide\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Veuillez saisir un password valide\")\r\n        .min(6, \"doivent comprendre au moins 6 caractères.\"),\r\n\r\n    nom: Yup.string().required('Veuillez saisir un nom valide'),\r\n\r\n    prenom: Yup.string().required('Veuillez saisir un prenom valide'),\r\n\r\n    matricule: Yup.string().required('Veuillez saisir votre matricule'),\r\n\r\n    programme: Yup.string().required('Veuillez saisir un programme valide'),\r\n\r\n    telephone: Yup.string().required('Veuillez saisir un telephone valide').min(10, \"doit comprendre au moins 10 caractères.\"),\r\n\r\n    adresse: Yup.string().required('Veuillez saisir un adresse valide')\r\n})\r\n\r\n\r\nexport default class EtudiantRegister extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = new Etudiant()\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"col\">\r\n                    <div className=\"card p-3 m-3\">\r\n                        <h5 className=\"card-title text-center p-3\" style={{ background: '#E3F9F0 ' }}>Nouvel Étudiant</h5>\r\n                        <Formik\r\n                            initialValues={{\r\n                                email: \"\",\r\n                                password: \"\",\r\n                                nom: \"\",\r\n                                prenom: \"\",\r\n                                matricule: \"\",\r\n                                programme: \"\",\r\n                                telephone: \"\",\r\n                                adresse: \"\"\r\n                            }}\r\n                            validationSchema={formSchema}\r\n                            onSubmit={(values, actions) => {\r\n                                return new Promise(function (resolve) {\r\n                                    setTimeout(() => {\r\n                                        resolve(UserService.getByEmail(values.email)\r\n                                            .then((val) => {\r\n                                                if (val.email === values.email) {\r\n                                                    actions.setFieldError('email', \"Adresse électronique déjà utilisée\")\r\n                                                } else {\r\n                                                    EtudiantService.post(values);\r\n                                                    actions.resetForm();\r\n                                                    actions.setStatus({ message: \"Utilisateur crée avec succès\" });\r\n                                                    setTimeout(() => {\r\n                                                        actions.setStatus({ message: '' });\r\n                                                    }, 3000);\r\n\r\n                                                    actions.setSubmitting(false);\r\n                                                }\r\n                                            })\r\n                                            .then((val) => console.log(val))\r\n                                            .catch(function (reason) {\r\n                                                console.log(reason + \" reason\")\r\n                                            }));\r\n\r\n                                        actions.setSubmitting(false);\r\n                                    }, 1000);\r\n\r\n                                })\r\n                            }}>\r\n                            {({ status, isSubmitting, isValid, isValidating }) => (\r\n                                <Form>\r\n                                    <div className=\"container text-left justify-content-center\">\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Nom</label>\r\n                                                    <Field type=\"text\"\r\n                                                        name=\"nom\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"nom\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Prenom</label>\r\n                                                    <Field type=\"text\"\r\n                                                        name=\"prenom\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"prenom\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Email</label>\r\n                                                    <Field type=\"email\"\r\n                                                        name=\"email\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"example@email.com\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"email\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Password</label>\r\n                                                    <Field type=\"password\"\r\n                                                        name=\"password\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"password\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Matricule</label>\r\n                                                    <Field type=\"text\"\r\n                                                        name=\"matricule\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"matricule\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> Téléphone </label>\r\n                                                    <Field type=\"text\"\r\n                                                        name=\"telephone\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"telephone\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> adresse </label>\r\n                                                    <Field type=\"text\"\r\n                                                        name=\"adresse\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"adresse\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Programme</label>\r\n                                                    <Field as=\"select\"\r\n                                                        name=\"programme\"\r\n                                                        className=\"form-control\"\r\n                                                        >\r\n                                                            <option value=\"\">Choisir un programme</option>\r\n                                                            <option value=\"Gestion de commerces\">Gestion de commerces</option>\r\n                                                            <option value=\"Soins infirmiers\">Soins infirmiers</option>\r\n                                                            <option value=\"Soins infirmiers pour auxiliaires\">Soins infirmiers pour auxiliaires</option>\r\n                                                            <option value=\"Techniques d’éducation à l’enfance\">Techniques d’éducation à l’enfance</option>\r\n                                                            <option value=\"Techniques de bureautique\">Techniques de bureautique</option>\r\n                                                            <option value=\"Techniques de comptabilité et de gestion\">Techniques de comptabilité et de gestion</option>\r\n                                                            <option value=\"Techniques de l’informatique\">Techniques de l’informatique</option>\r\n                                                            <option value=\"Techniques de la logistique du transport\">Techniques de la logistique du transport</option>\r\n                                                            <option value=\"Technologie de l’architecture\">Technologie de l’architecture</option>\r\n                                                            <option value=\"Technologie de l’électronique industrielle\">Technologie de l’électronique industrielle</option>\r\n                                                            <option value=\"Technologie de l’estimation et de l’évaluation en bâtiment\">Technologie de l’estimation et de l’évaluation en bâtiment</option>\r\n                                                            <option value=\"Technologie du génie civil\">Technologie du génie civil</option>\r\n                                                            <option value=\"Techniques de la logistique du transport\">Techniques de la logistique du transport</option>\r\n                                                            <option value=\"Technologie du génie physique\">Technologie du génie physique</option>\r\n                                                        </Field>\r\n                                                        placeholder=\"\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"programme\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"submit\"\r\n                                                        className={`submit ${isSubmitting || !isValid ? 'disabled' : ' '}`}\r\n                                                        className=\"btn btn-primary\"\r\n                                                        disabled={isValidating || isSubmitting || !isValid}>Enregistrer\r\n                                            </button>\r\n\r\n                                                    {status && status.message &&\r\n                                                        <div className=\"alert alert-success mt-3\" role=\"alert\">\r\n                                                            {status.message}\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <span className=\"font-weight-light\">Vous avez déjà un compte? </span>\r\n                                                <a href=\"/login\" className=\"stretched-link\"\r\n                                                >Se connecter </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import { API_URL } from '../Constants';\r\n\r\nconst baseURL = API_URL + \"/users\";\r\n\r\nclass LoginService{\r\n\r\n    async login(email, password){\r\n        let data;\r\n        await fetch(baseURL +\"/get/\" +email + \"/\" + password, {method: \"GET\"} )\r\n            .then(r => data = r.json()).then(res => this.storage(res))\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n    \r\n    async storage(user) {\r\n        await window.localStorage.setItem(\"id\", user.id);\r\n        await window.localStorage.setItem(\"desc\", user.desc);\r\n    }\r\n\r\n    async logout() {\r\n        await window.localStorage.removeItem(\"id\");\r\n        await window.localStorage.removeItem(\"desc\");\r\n    }\r\n}\r\n\r\nexport default new LoginService()","import React, { Component } from 'react';\r\nimport './../App.css';\r\nimport './../css/Register.css';\r\nimport LoginService from \"../service/LoginService\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {user : {}, isNotlogin : false };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let user = await LoginService.login(this.state[\"email\"], this.state[\"password\"])\r\n        if (user.id !== undefined){\r\n            this.props.history.push('/?refresh');\r\n        }else{\r\n            this.setState({isNotlogin : true})\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        \r\n        return (\r\n            <div className=\"formBox\">\r\n                <h3>Login</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Email:\r\n                        <input type=\"email\" name=\"email\" onChange={this.handleChange} />\r\n                    </label>\r\n                    <label>\r\n                        Password:\r\n                        <input type=\"password\" name=\"password\" onChange={this.handleChange} />\r\n                     \r\n                    </label>\r\n                    <input type=\"submit\" value=\"Login\"/>\r\n                    {this.state.isNotlogin &&\r\n                         <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n                         Email ou password invalide\r\n                       </div>\r\n                    }\r\n                </form>\r\n\r\n               \r\n\r\n        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Home extends Component {\r\n    componentDidMount() {\r\n        if (this.props.location.search === \"?refresh\") {\r\n            this.props.history.replace(\"/\")\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           <div>\r\n               <h2 className=\"text-center\">Home page</h2>\r\n           </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nfunction NotLoggedInNav() {\r\n    return (\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            <Nav.Link href=\"/register\">Register</Nav.Link>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nfunction GestionnaireNav() {\r\n    return (\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/gestionnaireStage\">Liste des stages</Nav.Link>\r\n            <Nav.Link href=\"/etudiants\">Liste d'étudiants</Nav.Link>\r\n            <Nav.Link href=\"/gestionnaire\">Votre profil</Nav.Link>\r\n            <Nav.Link href=\"/stageVeto\">Liste des stages</Nav.Link>\r\n            <Nav.Link href=\"/logout\">Logout</Nav.Link>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nfunction EmployeurNav() {\r\n    return (\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/createStage\">Créer un stage</Nav.Link>\r\n            <Nav.Link href=\"/stages\">Voir toutes les offres de stage</Nav.Link>\r\n            <Nav.Link href=\"/logout\">Logout</Nav.Link>\r\n        </Nav>\r\n    );\r\n}\r\n\r\nfunction EtudiantNav() {\r\n    return (\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/etudiant\">Votre profil</Nav.Link>\r\n            <Nav.Link href=\"/offrestage\">Offres de stage</Nav.Link>\r\n            <Nav.Link href=\"/listecandidatures\">Vos candidatures</Nav.Link>\r\n\r\n            <Nav.Link href=\"/logout\">Logout</Nav.Link>\r\n        </Nav>\r\n    );\r\n}\r\n\r\n\r\nfunction NavType(props) {\r\n    if (props.desc.toUpperCase() === \"ETUDIANT\")\r\n        return <EtudiantNav/>\r\n    else if (props.desc.toUpperCase() === \"EMPLOYEUR\")\r\n        return <EmployeurNav/>\r\n    else if (props.desc.toUpperCase() === \"GESTIONNAIRE\")\r\n        return <GestionnaireNav/>\r\n    else\r\n        return <NotLoggedInNav/>\r\n}\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {desc: localStorage.getItem(\"desc\") == null ? \"\" : localStorage.getItem(\"desc\")}\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand href=\"/\">\r\n                    Projet intégré équipe 1\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <NavType desc={this.state.desc}/>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import axios from 'axios'\r\nimport CV from \"../model/CV\";\r\nimport { API_URL } from '../Constants';\r\n\r\nconst CV_URL = API_URL + \"/cvs\";\r\n\r\n\r\nclass CVService{\r\n\r\n    createCV(idEtudiant, formData){\r\n        return axios.put(CV_URL + \"/create/\" + idEtudiant, formData)\r\n\r\n    }\r\n    getCVByEtudiant(idEtudiant){\r\n\r\n    }\r\n    updateCVStatus(isValid, id){\r\n        console.log(isValid);\r\n        const formData = new FormData();\r\n        formData.append('isValid', isValid);\r\n        const options = {\r\n            method: 'PUT',\r\n            body: formData\r\n        };\r\n        return axios.put(CV_URL + \"/update/\" + id, formData)\r\n    }\r\n}\r\n\r\nexport default new CVService()","import React, { Component } from 'react';\r\nimport EtudiantService from '../../service/EtudiantService';\r\nimport axios from 'axios'\r\nimport CVService from \"../../service/CVService\";\r\n\r\nexport default class ListEtudiantsComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { etudiants: [], filter: '', statut: '', idEtudiant: '', isCVApprouve: false};\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(event, isValid, id){\r\n        event.preventDefault();\r\n        CVService.updateCVStatus(isValid, id);\r\n        window.location.reload();\r\n    }\r\n    renderColonneApprobation(etudiant){\r\n        if (etudiant.cv == null){\r\n            return <p> Pas de CV</p>\r\n        }\r\n        if (etudiant.cv.status == 'APPROVED'){\r\n            return <p>Approuvé</p>\r\n        }\r\n        if (etudiant.cv.status = 'UNREVIEWED') {\r\n            return(\r\n            <div>\r\n                <button className=\"btn btn-primary\" onClick={(event) =>  this.handleSubmit(event, true, etudiant.cv.id)}>Approuver\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={ (event) =>  this.handleSubmit(event, false, etudiant.cv.id)}>Refuser</button>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    downloadCV = (idEtudiant) => {\r\n            const method = 'GET';\r\n            const url = 'http://restapiprojetintegre-env.eba-pq9nvjjm.us-east-2.elasticbeanstalk.com/cvs/get/' + idEtudiant;\r\n            return () => {\r\n                axios\r\n                    .request({\r\n                        url,\r\n                        method,\r\n                        responseType: 'blob',\r\n                    })\r\n                    .then(({data}) => {\r\n                        const downloadUrl = window.URL.createObjectURL(new Blob([data]));\r\n                        const link = document.createElement('a');\r\n                        link.href = downloadUrl;\r\n                        link.setAttribute('download', \"etudiant\" + idEtudiant + \".pdf\"); //any other extension\r\n                        document.body.appendChild(link);\r\n                        link.click();\r\n                        link.remove();\r\n                    });\r\n            }\r\n    }\r\n\r\n    handleChangeText = event => {\r\n        this.setState({ filter: event.target.value });\r\n    };\r\n\r\n    handleChangeRadio = event => {\r\n        console.log(event.target.value)\r\n        this.setState({ statut: event.target.value });\r\n    };\r\n    \r\n    async componentDidMount() {\r\n            const { data: etudiants } = await EtudiantService.getEtudiants();\r\n            this.setState({ etudiants });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className=\"d-flex flex-column\">\r\n\r\n            <div>\r\n                <h1 className=\"text-center\">Liste des étudiants</h1>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <h4 className=\"text-center\">FILTRAGE MATRICULE</h4>\r\n                    </div>\r\n                    <div className=\"row\"> \r\n                        <input type='text' value={this.state.filter} onChange={this.handleChangeText} />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <h4 className=\"text-center\">STATUT DE STAGE</h4>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label><input type=\"radio\" name=\"statut\" value=\"aucun stage\" \r\n                                onChange={this.handleChangeRadio}/> N'a aucun stage</label>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label><input type=\"radio\" name=\"statut\" value=\"possede stage\" \r\n                                onChange={this.handleChangeRadio}/> Possède un stage</label>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <label><input type=\"radio\" name=\"statut\" value=\"\" \r\n                                onChange={this.handleChangeRadio}/> Tous les étudiants</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th> Matricule </th>\r\n                                <th> Nom </th>\r\n                                <th> Prénom </th>\r\n                                <th> Programme </th>\r\n                                <th> Courriel </th>\r\n                                <th> Téléphone </th>\r\n                                <th> Statut </th>\r\n                                <th> Télécharger son CV</th>\r\n                                <th> Etat du CV</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.etudiants\r\n                                .filter(etudiant => etudiant.matricule.includes(this.state.filter) && \r\n                                        etudiant.statutStage.includes(this.state.statut))\r\n                                .map(\r\n                                    etudiant =>\r\n                                    <tr key={etudiant.id}>\r\n                                        <td>{etudiant.matricule}</td>\r\n                                        <td>{etudiant.nom}</td>\r\n                                        <td>{etudiant.prenom}</td>\r\n                                        <td>{etudiant.programme}</td>\r\n                                        <td>{etudiant.email}</td>\r\n                                        <td>{etudiant.telephone}</td>\r\n                                        <td>{etudiant.statutStage}</td>\r\n                                        <td>\r\n                                            {etudiant.cv != null ?<button onClick={this.downloadCV(etudiant.id)} className=\"btn btn-primary\">Telecharger</button>\r\n                                                : <p>Pas de CV</p>}<br/>\r\n                                        </td>\r\n                                        <td>\r\n                                            {this.renderColonneApprobation(etudiant)}\r\n\r\n\r\n\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './../App.css';\r\nimport axios from \"axios\";\r\nimport CVService from \"../service/CVService\";\r\n\r\nexport default class HomeEtudiant extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n        this.state = {etudiant: {}, file: \"\", displayInvalidFileMessage: false, displaySubmitCVButton: false, CVInfoMessage: \"\", hasUploadedCV: false, id: ''};\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n    }\r\n    onChangeHandler = event => {\r\n        if (this.checkMimeType(event)) {\r\n            this.setState({\r\n                file: event.target.files[0]\r\n            });\r\n\r\n        }\r\n        this.setState({hasUploadedCV: false});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var id;\r\n        if (localStorage.getItem(\"desc\") === \"Etudiant\")\r\n            id = localStorage.getItem(\"id\");\r\n\r\n        const {data: etudiant} = await axios.get(\r\n            \"http://restapiprojetintegre-env.eba-pq9nvjjm.us-east-2.elasticbeanstalk.com/etudiants/get?idEtudiant=\" + id\r\n    );\r\n        this.setState({etudiant: etudiant});\r\n\r\n        this.setState({hasAlreadyCV: this.state.etudiant.cv !== undefined} );\r\n    }\r\n\r\n    displayCVMessage(){\r\n        if (this.state.etudiant.cv != undefined) {\r\n            switch (this.state.etudiant.cv.status) {\r\n                case \"APPROVED\":\r\n                    return <label> Votre CV a déjà été approuvé. Mais vous pouvez le mettre à jour.</label>\r\n                case \"DENIED\" :\r\n                    return <label> Votre CV a été refusé. Veuillez en soumettre un autre pour postuler à une offre de stage.</label>\r\n                case \"UNREVIEWED\" :\r\n                    return <label> Votre CV a est en cours d'évaluation.</label>\r\n                default :\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            return <label> Vous n'avez pas de CV, veuillez en soumettre afin de postuler à une offre de stage.</label>\r\n        }\r\n    }\r\n\r\n    checkMimeType = (event) => {\r\n        let files = event.target.files\r\n        let err = ''\r\n        const types = ['application/pdf']\r\n        for (var x = 0; x < files.length; x++) {\r\n            if (types.every(type => files[x].type !== type)) {\r\n                err += files[x].type + ' is not a supported format\\n'\r\n                this.setState({displayInvalidFileMessage: true});\r\n                this.setState({displaySubmitCVButton: false});\r\n            } else {\r\n                this.setState({displayInvalidFileMessage: false});\r\n                this.setState({displaySubmitCVButton: true});\r\n            }\r\n        }\r\n        ;\r\n        if (err !== '') {\r\n            event.target.value = null\r\n            return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        var idEtudiant;\r\n        if (localStorage.getItem(\"desc\") === \"Etudiant\")\r\n            idEtudiant = localStorage.getItem(\"id\");\r\n        const formData = new FormData();\r\n        formData.append('file', this.state.file)\r\n        formData.append('name', this.state.file.name);\r\n        this.setState({hasUploadedCV: true});\r\n        CVService.createCV(idEtudiant, formData)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"d-flex flex-column\">\r\n            <div className=\"container\">\r\n                <h3>Votre profil</h3>\r\n                <label>Nom complet : {this.state.etudiant.prenom}  {this.state.etudiant.nom}</label><br/>\r\n                <label>Matricule : {this.state.etudiant.matricule} </label><br/>\r\n                <label>Adresse : {this.state.etudiant.adresse}</label><br/>\r\n                <label>Email : {this.state.etudiant.email}</label><br/>\r\n                <label>Adresse : {this.state.etudiant.adresse}</label><br/>\r\n                <label>Programme : {this.state.etudiant.programme}</label><br/>\r\n                <label>Televerser votre CV : <input type=\"file\" name=\"file\"\r\n                                                    className=\"form-control-file\"\r\n                                                    accept=\"application/pdf\"\r\n                                                    ref={this.inputRef}\r\n                                                    defaultValue= {this.state.file}\r\n                                                    onChange={this.onChangeHandler}/>\r\n\r\n                </label><br/>\r\n                {this.displayCVMessage()}<br/>\r\n                {this.state.displayInvalidFileMessage ?\r\n                    <label style={{color: \"red\"}}>Ce format de fichier n'est pas autorisé. Seuls les fichiers au format PDF sont autorisés.</label> : null}\r\n                {this.state.displaySubmitCVButton ? <button type=\"submit\" className=\"btn btn-primary\">Enregistrer mon CV</button> : null}<br/>\r\n                {this.state.hasUploadedCV? <label style={{color: \"green\"}}>Vous venez de téléverser votre CV. Il doit cependant être approuvé pour que vous puissiez appliquer aux offres de stage.</label>: null}<br/>\r\n            </div>\r\n            </form>\r\n\r\n        );\r\n    }\r\n}","import { API_URL } from '../Constants';\r\n\r\nconst baseURL = API_URL + \"/employeurs\";\r\n\r\nclass EmployeurService{\r\n    async getAll(){\r\n        let data;\r\n        await fetch(baseURL +\"/findAll\", {method: \"GET\"} )\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n\r\n    async getByEmail(email){\r\n        let data;\r\n        await fetch(baseURL +\"/email?email=\" +email, {method: \"GET\"} )\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n\r\n    async getById(id) {\r\n        let data;\r\n        await fetch(baseURL + \"/get?idEmployeur=\" + id, {method: \"GET\"})\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n\r\n    async post(employeur){\r\n        fetch(baseURL + \"/createEmploye\",\r\n            {method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(employeur)} )\r\n            .then(r => r.json());\r\n    }\r\n\r\n    async put(employeur,id){\r\n        fetch(baseURL + \"/update/\"+id,\r\n            {method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(employeur)} )\r\n            .then(r => r.json());\r\n    }\r\n}\r\n\r\nexport default new EmployeurService()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport '../../css/Register.css';\r\nimport EmployeurService from \"../../service/EmployeurService\";\r\nimport {Formik, Field, Form, ErrorMessage} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport UserService from \"../../service/UserService\";\r\n\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{2,4}?[ \\\\-]*[0-9]{2,4}?$/;\r\n\r\nconst formSchema = Yup.object().shape({\r\n    nomEntreprise: Yup.string().required('Veuillez saisir un nom valide'),\r\n    email: Yup.string()\r\n        .required('Veuillez saisir un email valide')\r\n        .email(\"Courriel inavalide\"),\r\n    password: Yup.string()\r\n        .required(\"Veuillez saisir un password valide\")\r\n        .min(6, \"doivent comprendre au moins 6 caractères.\"),\r\n    telephone: Yup.string().required('Veuillez saisir un telephone valide')\r\n        .min(8, \"doivent comprendre au moins 8 caractères.\")\r\n        .max(14, 'Numéro de téléphone invalide')\r\n        .matches(phoneRegExp, 'Numéro de téléphone invalide'),\r\n    adresse: Yup.string().required('Veuillez saisir un adresse valide'),\r\n\r\n});\r\n\r\n\r\nexport default class EmployeurRegister extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"container \">\r\n                <div className=\"col\">\r\n                    <div className=\"card p-3 m-3\">\r\n                        <h5 className=\"card-title text-center p-3\" style={{background: '#E3F9F0 '}}>Nouvel\r\n                            employeur</h5>\r\n                        <Formik\r\n                            initialValues={{\r\n                                nomEntreprise: \"\",\r\n                                email: \"\",\r\n                                password: \"\",\r\n                                telephone: \"\",\r\n                                adresse: \"\",\r\n                                rol: \"Employeur\"\r\n                            }}\r\n                            validationSchema={formSchema}\r\n\r\n                            onSubmit={(values, actions) => {\r\n\r\n                                return new Promise(function (resolve) {\r\n                                    setTimeout(() => {\r\n                                        resolve(UserService.getByEmail(values.email)\r\n                                            .then((val) => {\r\n                                                if (val.email === values.email) {\r\n                                                    actions.setFieldError('email', \"Adresse électronique déjà utilisée\")\r\n                                                } else {\r\n                                                    EmployeurService.post(values);\r\n                                                    actions.resetForm();\r\n                                                    actions.setStatus({message: \"Utilisateur crée avec succès\"});\r\n\r\n                                                    setTimeout(() => {\r\n                                                        actions.setStatus({message: ''});\r\n                                                    }, 3000);\r\n\r\n                                                    actions.setSubmitting(false);\r\n\r\n                                                }\r\n\r\n                                            })\r\n                                            .then((val) => console.log(val))\r\n                                            .catch(function (reason) {\r\n                                                console.log(reason + \" reason\")\r\n                                            }));\r\n\r\n                                        actions.setSubmitting(false);\r\n                                    }, 1000);\r\n\r\n                                })\r\n                            }}\r\n                        >\r\n\r\n                            {({status, isSubmitting, isValid, isValidating}) => (\r\n                                <Form>\r\n                                    <div className=\"container text-left justify-content-center\">\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\">Nom de l'entreprise</label>\r\n                                                    <Field type=\"text\"\r\n                                                           name=\"nomEntreprise\"\r\n                                                           className=\"form-control\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"nomEntreprise\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> Email </label>\r\n                                                    <Field type=\"email\"\r\n                                                           name=\"email\"\r\n                                                           className=\"form-control\"\r\n                                                           placeholder=\"example@email.com\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"email\">{msg => <div\r\n                                                        className=\"badge alert-danger\"> {msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> Password </label>\r\n                                                    <Field type=\"password\"\r\n                                                           name=\"password\"\r\n                                                           className=\"form-control\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"password\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> Téléphone </label>\r\n                                                    <Field type=\"text\"\r\n                                                           name=\"telephone\"\r\n                                                           className=\"form-control\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"telephone\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> adresse </label>\r\n                                                    <Field type=\"text\"\r\n                                                           name=\"adresse\"\r\n                                                           className=\"form-control\"\r\n                                                           maxLength=\"255\"\r\n                                                    />\r\n                                                    <ErrorMessage name=\"adresse\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"submit\"\r\n                                                            className={`submit ${isSubmitting || !isValid ? 'disabled' : ' '}`}\r\n                                                            className=\"btn btn-primary\"\r\n                                                            disabled={isValidating || isSubmitting || !isValid}>Enregistrer\r\n                                                    </button>\r\n\r\n                                                    {status && status.message &&\r\n                                                    <div className=\"alert alert-success mt-3\" role=\"alert\">\r\n                                                        {status.message}\r\n                                                    </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n\r\n                                            <div className=\"col-sm-4 offset-sm-4 text-center\">\r\n                                                <span className=\"font-weight-light\">Vous avez déjà un compte? </span>\r\n                                                <a href=\"/login\" className=\"stretched-link\"\r\n                                                >Se connecter </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport './../css/Register.css';\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\nimport EmployeurRegister from '../components/employeur/EmployeurRegister';\r\nimport EtudiantRegister from './EtudiantRegister';\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'etudiant',\r\n        };\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\tid=\"controlled-tab-example\"\r\n\t\t\t\t\t\tactiveKey={this.state.key}\r\n\t\t\t\t\t\tonSelect={key => this.setState({ key })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Tab eventKey=\"etudiant\" title=\"Etudiant\">\r\n\t\t\t\t\t\t\t<EtudiantRegister/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab eventKey=\"employeur\" title=\"Employeur\">\r\n\t\t\t\t\t\t\t<EmployeurRegister/>\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t</Tabs>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './../App.css';\r\nimport './../css/Register.css';\r\nimport LoginService from \"../service/LoginService\";\r\n\r\n\r\nexport default class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        LoginService.logout();\r\n        this.props.history.push('/?refresh');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>LOG OUT!</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import User from \"./User\";\r\n\r\nexport default class Employeur extends User {\r\n    nomEntreprise = \"\";\r\n    email = \"\";\r\n    password = \"\";\r\n    telephone = \"\";\r\n    adresse = \"\";\r\n    desc = \"\"\r\n}","import Employeur from './Employeur'\r\nexport default class Stage{\r\n    id;\r\n    titre = \"\";\r\n    description = \"\";\r\n    exigences= \"\";\r\n    dateDebut= \"\";\r\n    dateFin= \"\";\r\n    nbHeuresParSemaine= \"\";\r\n    salaire= \"\";\r\n    nbAdmis= \"\";\r\n    isOuvert;\r\n    statut;\r\n    dateLimiteCandidature= \"\";\r\n    programme= \"\";\r\n    ville =\"\";\r\n    etudiantsAdmits = [];\r\n    employeur= new Employeur();\r\n}","import axios from 'axios';\r\nimport { API_URL } from '../Constants';\r\n\r\nconst STAGE_ETUDIANTS_URL_PUT = API_URL + \"/stages/updateEtudiantsAdmits/\";\r\nconst STAGES_URL = API_URL + \"/stages\";\r\nconst STAGES_URL_POST = API_URL + \"/stages/createStage\";\r\n\r\nclass StageService{\r\n\r\n    getStages(){\r\n        return axios.get(STAGES_URL + \"/findAll\");\r\n    }\r\n\r\n    getStagesApprouves(){\r\n        return axios.get(STAGES_URL + \"/approuves\");\r\n    }\r\n    \r\n    getStageById(id){\r\n        return axios.get(STAGES_URL + \"/getStage?idStage=\" + id);\r\n    }\r\n\r\n    getStagesByEmployeurId(idEmployeur){\r\n        return axios.get(STAGES_URL + \"/stageByEmployeurId?idEmployeur=\"+ idEmployeur);\r\n    }\r\n\r\n    getStagesEtudiant(idEtudiant){\r\n        return axios.get(STAGES_URL + \"/stagesEtudiant?idEtudiant=\"+ idEtudiant);\r\n    }\r\n    \r\n    getEtudiantsByStageId(idStage) {\r\n        return axios.get(STAGES_URL + \"/getEtudiantsAdmits/\" + idStage);\r\n    }\r\n\r\n    async getById(id) {\r\n        let data;\r\n        await fetch(STAGES_URL + \"/getStage?idStage=\" + id, {method: \"GET\"})\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n\r\n    async updateStage(stage, id){\r\n        fetch( STAGES_URL + \"/updateStatusStage/\"+ id,\r\n            {method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(stage)} )\r\n            .then(r => r.json())\r\n            .catch(error => console.error('Error:', error))\r\n            .then(response => console.log('Success:', response));\r\n    }\r\n\r\n    createStage(stage){\r\n        return axios.post(STAGES_URL_POST, stage)\r\n    }\r\n\r\n    addEtudiants(id, etudiants){\r\n        return axios.put(STAGE_ETUDIANTS_URL_PUT + id, etudiants);\r\n    }\r\n}\r\n\r\nexport default new StageService()","import React, { Component } from 'react';\r\n\r\nclass ValidationChamp extends Component {\r\n    \r\n    render() {\r\n        const {field} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"badge alert-danger\">Veuillez saisir { field } valide</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidationChamp;","import React, { Component } from 'react';\r\n\r\nclass ValidationDate extends Component {\r\n    render() {\r\n        const {field} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"badge alert-danger\">{ field }</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidationDate;","import React, { Component } from 'react';\r\nimport Stage from '../../model/Stage'\r\nimport StageService from '../../service/StageService';\r\nimport { Field, Form, ErrorMessage, withFormik } from \"formik\";\r\nimport Employeur from '../../model/Employeur';\r\nimport '../../App.css';\r\nimport ValidationChamp from '../validation/ValidationChampVide'\r\nimport ValidationDate from '../validation/ValidationDate'\r\nimport EmployeurService from \"../../service/EmployeurService\";\r\n\r\nconst isRequired = (message) => (value) => (!!value ? undefined : message);\r\n\r\nclass CreateStageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { sended: false }\r\n\r\n  }\r\n\r\n  feedBack() {\r\n\r\n    this.setState({ sended: true });\r\n  }\r\n\r\n  cancel() {\r\n    this.state.history.push('/stages');\r\n  }\r\n  render() {\r\n    const { handleSubmit, isSubmitting, isValid, isValidating, status, employeur } = this.props;\r\n\r\n\r\n    return (\r\n      <div className=\"card p-3\">\r\n        <h5 className=\"card-title text-center p-3\" style={{ background: '#E3F9F0' }}>Nouveau stage</h5>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\">Titre</label>\r\n                <Field  name=\"titre\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\"un Titre \"} />)} />\r\n                <ErrorMessage name=\"titre\">{msg => <div>{msg}</div>}</ErrorMessage >\r\n              </div>\r\n\r\n              <div className=\" form-group col\" >\r\n                <label className=\"control-label\">Programme</label>\r\n                <Field as=\"select\"\r\n                    name=\"programme\"\r\n                    className=\"form-control\"\r\n                    validate={isRequired(<ValidationChamp field={\" un Programme \"} />)}\r\n                    >\r\n                    <option value=\"\">Choisir un programme</option>\r\n                    <option value=\"Gestion de commerces\">Gestion de commerces</option>\r\n                    <option value=\"Soins infirmiers\">Soins infirmiers</option>\r\n                    <option value=\"Soins infirmiers pour auxiliaires\">Soins infirmiers pour auxiliaires</option>\r\n                    <option value=\"Techniques d’éducation à l’enfance\">Techniques d’éducation à l’enfance</option>\r\n                    <option value=\"Techniques de bureautique\">Techniques de bureautique</option>\r\n                    <option value=\"Techniques de comptabilité et de gestion\">Techniques de comptabilité et de gestion</option>\r\n                    <option value=\"Techniques de l’informatique\">Techniques de l’informatique</option>\r\n                    <option value=\"Techniques de la logistique du transport\">Techniques de la logistique du transport</option>\r\n                    <option value=\"Technologie de l’architecture\">Technologie de l’architecture</option>\r\n                    <option value=\"Technologie de l’électronique industrielle\">Technologie de l’électronique industrielle</option>\r\n                    <option value=\"Technologie de l’estimation et de l’évaluation en bâtiment\">Technologie de l’estimation et de l’évaluation en bâtiment</option>\r\n                    <option value=\"Technologie du génie civil\">Technologie du génie civil</option>\r\n                    <option value=\"Techniques de la logistique du transport\">Techniques de la logistique du transport</option>\r\n                    <option value=\"Technologie du génie physique\">Technologie du génie physique</option>\r\n                </Field>  \r\n                <ErrorMessage name=\"programme\">{msg => <div>{msg}</div>}</ErrorMessage>\r\n              </div>\r\n\r\n              <div className=\" form-group col\" >\r\n                <label className=\"control-label\">Ville</label>\r\n                <Field  name=\"ville\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\" une ville \"} />)} />\r\n                <ErrorMessage name=\"ville\">{msg => <div>{msg}</div>}</ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Dates */}\r\n            <div className=\"row\">\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\">Date Début de Stage</label>\r\n                <Field type=\"date\" name=\"dateDebut\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\"une Date \"} />)} />\r\n                <ErrorMessage name=\"dateDebut\">{msg => <ValidationDate field={msg} />}</ErrorMessage>\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\">Date finale de Stage</label>\r\n                <Field type=\"date\" name=\"dateFin\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\"une Date \"} />)} />\r\n                <ErrorMessage name=\"dateFin\">{msg => <ValidationDate field={msg} />}</ErrorMessage>\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\" >Date limite pour appliquer</label>\r\n                <Field type=\"date\" name=\"dateLimiteCandidature\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\"une Date \"} />)} />\r\n                <ErrorMessage name=\"dateLimiteCandidature\">{msg => <ValidationDate field={msg} />}</ErrorMessage>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\">Nombre de places</label>\r\n                <Field type=\"number\" name=\"nbAdmis\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\"un Nombre de places \"} />)} min=\"0\" />\r\n                <ErrorMessage name=\"nbAdmis\">{msg => <div>{msg}</div>}</ErrorMessage>\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\">Heures par semaine</label>\r\n                <Field type=\"number\" name=\"nbHeuresParSemaine\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\" un Nombre d'heures par semaine\"} min=\"0\" />)} />\r\n                <ErrorMessage name=\"nbHeuresParSemaine\">{msg => <div>{msg}</div>}</ErrorMessage>\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Salaire</label>\r\n                <Field type=\"number\" name=\"salaire\" className=\"form-control\" min=\"0\" />\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\">Description</label>\r\n                <Field component=\"textarea\" name=\"description\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\" une Description\"} />)} />\r\n                <ErrorMessage name=\"description\">{msg => <div>{msg}</div>}</ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col\">\r\n                <label className=\"control-label\">Exigences</label>\r\n                <Field component=\"textarea\"  name=\"exigences\" className=\"form-control\" validate={isRequired(<ValidationChamp field={\"un exigence\"} />)} />\r\n                <ErrorMessage name=\"exigences\">{msg => <div>{msg}</div>}</ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n\r\n              <button type=\"submit\"\r\n                className={`submit ${isSubmitting || !isValid ? 'disabled' : ' '} btn btn-primary`}\r\n                disabled={isValidating || isSubmitting || !isValid} onClick={this.feedBack.bind(this)}>Enregistrer</button>\r\n\r\n              {status && status.message &&\r\n                <div className=\"alert alert-success mt-3\" role=\"alert\">\r\n                  {status.message}\r\n                </div>\r\n              }\r\n\r\n              {/* {this.state.sended && isValid && \r\n                <div className=\"alert alert-success mt-3\" role=\"alert\">\r\n                  <a className=\"stretched-link\" onClick={this.cancel.bind(this)}> Voir mes offres de Stage</a>\r\n                </div>\r\n              }*/}\r\n\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFormik({\r\n\r\n  \r\n  mapPropsToValues(props) {\r\n    return new Stage();\r\n  },\r\n\r\n  validate(values) {\r\n    var today = new Date();\r\n    var startDate = new Date(values.dateDebut);\r\n    var finalDate = new Date(values.dateFin);\r\n    var limitApplicationDate = new Date(values.dateLimiteCandidature);\r\n    const errors = {}\r\n\r\n    if (startDate < today) {\r\n      errors.dateDebut = 'la date de début ne doit être inférieure ou égale à la date d\\'aujourd\\'hui'\r\n    }\r\n\r\n    if (finalDate <= startDate) {\r\n      errors.dateFin = 'La date finale ne doit pas être inférieure à la date initiale. '\r\n    }\r\n\r\n    if (limitApplicationDate >= startDate) {\r\n      errors.dateLimiteCandidature = 'la date doit être inférieure à la date de début'\r\n    }\r\n\r\n    if (limitApplicationDate < today) {\r\n      errors.dateLimiteCandidature = 'la date limit ne doit être inférieure ou égale à la date d\\'aujourd\\'hui'\r\n    }\r\n\r\n    if (!values) {\r\n      console.log(this.state)\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  saveCurrentEmployee(values) {\r\n\r\n    var id;\r\n    if (localStorage.getItem(\"desc\") === \"Employeur\")\r\n      id = localStorage.getItem(\"id\");\r\n\r\n    let employee = new Employeur;\r\n    employee = EmployeurService.getById(id)\r\n    employee.Stage = values;\r\n    EmployeurService.put(employee, id)\r\n\r\n    return employee;\r\n  },\r\n\r\n  handleSubmit(values, formikBag) {\r\n\r\n    var id;\r\n    if (localStorage.getItem(\"desc\") === \"Employeur\")\r\n      id = localStorage.getItem(\"id\");\r\n\r\n    let stage = new Stage();\r\n\r\n    EmployeurService.getById(id).then((res) => {\r\n      stage = values;\r\n      stage.employeur = res;\r\n\r\n      StageService.createStage(stage).then(() => {\r\n\r\n        formikBag.setStatus({ message: \"Stage crée avec succès\" });\r\n\r\n        //hide message \r\n        setTimeout(() => {\r\n          formikBag.setStatus({ message: '' });\r\n        }, 3000);\r\n      });\r\n\r\n    })\r\n    formikBag.resetForm()\r\n    formikBag.setSubmitting(false);\r\n  }\r\n\r\n})(CreateStageComponent);","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport axios from \"axios\";\r\n\r\nexport default class GestionnaireProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {gestionnaire: {}};\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var id;\r\n        if (localStorage.getItem(\"desc\") === \"Gestionnaire\")\r\n            id = localStorage.getItem(\"id\");\r\n\r\n        const {data: gestionnaire} = await axios.get(\r\n            \"http://restapiprojetintegre-env.eba-pq9nvjjm.us-east-2.elasticbeanstalk.com/gestionnaires/get?idGestionnaire=\" + id\r\n    );\r\n        this.setState({gestionnaire: gestionnaire});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container \">\r\n                <div className=\"col\">\r\n                    <div className=\"card p-3 m-3\">\r\n                        <h3>Votre profil</h3><br/>\r\n                        <label>Nom complet : {this.state.gestionnaire.prenom}  {this.state.gestionnaire.nom}</label>\r\n                        <label>Email : {this.state.gestionnaire.email}</label>\r\n                        <label>Téléphone : {this.state.gestionnaire.telephone}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}","import User from \"./User\";\r\n\r\nexport default class Gestionnaire extends User {\r\n    id;\r\n    password = \"\";\r\n    nom = \"\";\r\n    prenom = \"\";\r\n    email = \"\";\r\n    telephone = \"\";\r\n}","import { API_URL } from '../Constants';\r\n\r\nconst baseURL = API_URL + \"/gestionnaires\";\r\n\r\nclass GestionnaireService{\r\n\r\n    async getByPassword(password){\r\n        let data;\r\n        await fetch(baseURL +\"/password?password=\" + password, {method: \"GET\"} )\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n\r\n    async put(gestionnaire, id){\r\n        fetch(baseURL + \"/update/\" + id,\r\n            {method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(gestionnaire)} )\r\n            .then(r => r.json());\r\n    }\r\n}\r\n\r\nexport default new GestionnaireService()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport Gestionnaire from \"../../model/Gestionnaire\";\r\nimport {Formik, Field, Form, ErrorMessage} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport GestionnaireService from \"../../service/GestionnaireService\";\r\n\r\nconst passwordRequirements = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).*$/;\r\n\r\nconst regexMaj = /^(?=.*[A-Z]).*$/;\r\nconst regexMin = /^(?=.*[a-z]).*$/;\r\nconst regexDigit = /^(?=.*[0-9]).*$/;\r\n\r\nconst formSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .required(\"Veuillez saisir un mot de passe valide\")\r\n        .min(6, \"doivent comprendre au moins 6 caractères.\"),\r\n    newPassword: Yup.string()\r\n        .required(\"Veuillez saisir un mot de passe valide\")\r\n        .min(6, \"doivent comprendre au moins 6 caractères.\")\r\n        .matches(regexMaj, 'Veuillez saisir au moins 1 majuscule' )\r\n        .matches(regexMin, 'Veuillez saisir au moins 1 minuscule' )\r\n        .matches(regexDigit, 'Veuillez saisir au moins 1 chiffre' ),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('newPassword')], \"Le mot de passe ne correspond pas\")\r\n        .required('Veuillez confirmer votre mot de passe'),    \r\n});\r\n\r\nexport default class GestionnaireUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = new Gestionnaire();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className=\"container \">\r\n                <div className=\"col\">\r\n                    <div className=\"card p-3 m-3\">\r\n                        <h5 className=\"card-title text-center p-3\" style={{background: '#E3F9F0 '}}>Changer votre mot de passe</h5>\r\n                        \r\n                        <Formik\r\n                            initialValues={{\r\n                                password: \"\",\r\n                                newPassword: \"\",\r\n                                confirmPassword: \"\",\r\n                            }}\r\n                            validationSchema={formSchema}\r\n\r\n                            onSubmit={(values, actions) => {\r\n\r\n                                return new Promise(function (resolve) {\r\n                                    setTimeout(() => {\r\n                                        resolve(GestionnaireService.getByPassword(values.password)\r\n                                            .then((val) => {\r\n\r\n                                                if (val.password !== values.password) {\r\n                                                    actions.setFieldError('password', \"Mot de passe invalid\")\r\n                                                } else {\r\n                                                    values.password = values.newPassword;\r\n                                                    GestionnaireService.put(values, localStorage.getItem(\"id\"));\r\n                                                    actions.resetForm();\r\n                                                    actions.setStatus({message: \"Mot de passe mise à jour avec succès\"});\r\n\r\n                                                    setTimeout(() => {\r\n                                                        actions.setStatus({message: ''});\r\n                                                    }, 3000);\r\n\r\n                                                    actions.setSubmitting(false);\r\n\r\n                                                }\r\n\r\n                                            })\r\n                                            .then((val) => console.log(val))\r\n                                            .catch(function (reason) {\r\n                                                console.log(reason + \" reason\")\r\n                                            }));\r\n\r\n                                        actions.setSubmitting(false);\r\n                                    }, 1000);\r\n\r\n                                })\r\n                            }}\r\n                        >\r\n\r\n                            {({status, isSubmitting, isValid, isValidating}) => (\r\n                                <Form>\r\n                                    <div className=\"container text-left justify-content-center\">\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 offset-sm-3 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> Old Password </label>\r\n                                                    <Field type=\"password\"\r\n                                                           name=\"password\"\r\n                                                           className=\"form-control\"\r\n                                                           maxLength=\"255\"\r\n                                                          />\r\n                                                    <ErrorMessage name=\"password\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 offset-sm-3 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> New Password </label>\r\n                                                    <Field type=\"password\"\r\n                                                           name=\"newPassword\"\r\n                                                           className=\"form-control\"\r\n                                                           maxLength=\"255\"\r\n                                                          />\r\n                                                    <ErrorMessage name=\"newPassword\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 offset-sm-3 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label\"> Confirm Password </label>\r\n                                                    <Field type=\"password\"\r\n                                                           name=\"confirmPassword\"\r\n                                                           className=\"form-control\"\r\n                                                           maxLength=\"255\"\r\n                                                          />\r\n                                                    <ErrorMessage name=\"confirmPassword\">{msg => <div\r\n                                                        className=\"badge alert-danger\">{msg}</div>}</ErrorMessage>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 offset-sm-3 text-center\">\r\n                                                <div className=\"form-group\">\r\n                                                    <button type=\"submit\"\r\n                                                            className={`submit ${isSubmitting || !isValid ? 'disabled' : ' '}`}\r\n                                                            className=\"btn btn-primary\"\r\n                                                            disabled={isValidating || isSubmitting || !isValid}>Enregistrer\r\n                                                    </button>\r\n\r\n                                                    {status && status.message &&\r\n                                                    <div className=\"alert alert-success mt-3\" role=\"alert\">\r\n                                                        {status.message}\r\n                                                    </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport { Tab, Nav, Col, Row } from 'react-bootstrap';\r\nimport GestionnaireProfile from './GestionnaireProfile';\r\nimport GestionnaireUpdate from './GestionnaireUpdate';\r\n\r\nexport default class GestionnaireOptions extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: 'first',\r\n        };\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n\r\n\t\t\t<div className=\"container\">\r\n                \r\n                <div className=\"col\">\r\n                <div className=\"card p-3 m-3\">\r\n\r\n                <Tab.Container id=\"left-tabs-example\" \r\n                            defaultActiveKey=\"first\" \r\n                            activeKey={this.state.key} \r\n                            onSelect={key => this.setState({ key })}>\r\n                    <Row>\r\n                        <Col sm={3}>\r\n                        <Nav variant=\"pills\" className=\"flex-column\">\r\n                            <Nav.Item>\r\n                            <Nav.Link eventKey=\"first\">Votre profile</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                            <Nav.Link eventKey=\"second\">Changer mot de passe</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        </Col>\r\n                        <Col sm={9}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"first\">\r\n                                <GestionnaireProfile/>\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"second\">\r\n                                <GestionnaireUpdate/>\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                        </Col>\r\n                    </Row>\r\n                </Tab.Container>\r\n\t\t\t    \r\n                </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\t\t);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport StageService from '../../service/StageService';\r\n\r\nexport default class GestionnaireListStageComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { stages: [] };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(id){\r\n        this.props.history.push('/stageSelectEtudiants/' + id);\r\n    }\r\n    \r\n    async componentDidMount() {\r\n            const { data: stages } = await StageService.getStagesApprouves();\r\n            this.setState({ stages });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"pt-3 mt-3\">\r\n                    <h5 className=\"card-title text-center p-3\" style={{ background: '#E3F9F0 ' }}>Liste des stages approuvées</h5>\r\n\r\n                    <div className=\"row\">\r\n                        <table className=\"table table-striped table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Titre </th>\r\n                                    <th> Programme </th>\r\n                                    <th> Date Début </th>\r\n                                    <th> Date Finale </th>\r\n                                    <th> Ville </th>\r\n                                    <th> Heures par semaine </th>\r\n                                    <th> Assigner étudiant(s) </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.stages\r\n                                    .filter(stage => stage.ouvert)\r\n                                    .map(\r\n                                        stage =>\r\n                                        <tr key={stage.id}>\r\n                                            <td>{stage.titre}</td>\r\n                                            <td>{stage.programme}</td>\r\n                                            <td>{stage.dateDebut}</td>\r\n                                            <td>{stage.dateFin}</td>\r\n                                            <td>{stage.ville}</td>\r\n                                            <td>{stage.nbHeuresParSemaine}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-primary\" onClick={() => this.handleClick(stage.id)} >\r\n                                                    Assigner\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport StageService from '../../service/StageService';\r\n\r\n\r\nexport default class ListStagesEmployeur extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stage: [],\r\n            employeurId: \"\"\r\n        };\r\n\r\n        this.addStage = this.addStage.bind(this);\r\n    }\r\n\r\n    addStage() {\r\n\r\n        this.props.history.push('/createStage')\r\n    }\r\n\r\n    componentDidMount() {\r\n        var id;\r\n        if (localStorage.getItem(\"desc\") === \"Employeur\")\r\n            id = localStorage.getItem(\"id\");\r\n\r\n        StageService.getStagesByEmployeurId(id).then((res) => { this.setState({ stage: res.data }) })\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"col\">\r\n                    <div className=\"pt-3 mt-3\">\r\n                        <h5 className=\"card-title text-center p-3\" style={{ background: '#E3F9F0 ' }}>Stages</h5>\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                    <tr >\r\n                                        <th> Titre </th>\r\n                                        <th> Programme </th>\r\n                                        <th> Description </th>\r\n                                        <th> date Début </th>\r\n                                        <th> date Finale </th>\r\n                                        <th> Ville </th>\r\n                                        <th> Heures par semaine </th>\r\n                                        <th> Veto </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.stage.map(\r\n                                        stage =>\r\n                                            <tr key={stage.id}>\r\n                                                <td>{stage.titre}</td>\r\n                                                <td>{stage.programme}</td>\r\n                                                <td>{stage.description}</td>\r\n                                                <td>{stage.dateDebut}</td>\r\n                                                <td>{stage.dateFin}</td>\r\n                                                <td>{stage.ville}</td>\r\n                                                <td>{stage.nbHeuresParSemaine}</td>\r\n                                            </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { API_URL } from '../Constants';\r\n\r\nconst baseURL = API_URL + \"/candidatures\";\r\n\r\nclass CandidatureService{\r\n    async getAll(){\r\n        let data;\r\n        await fetch(baseURL +\"/findAll\", {method: \"GET\"} )\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n\r\n    async getById(id) {\r\n        let data;\r\n        await fetch(baseURL + \"/get?idCandidature=\" + id, {method: \"GET\"})\r\n            .then(r => data = r.json())\r\n            .catch(error => data = {});\r\n        return data;\r\n    }\r\n    async getByEtudiant(idEtudiant) {\r\n        return axios.get(baseURL + \"/getByEtudiant?idEtudiant=\"+ idEtudiant);\r\n\r\n    }\r\n\r\n    async post(idEtudiant, idStage){\r\n        const formData = new FormData();\r\n        formData.append('idEtudiant', idEtudiant);\r\n        formData.append('idStage', idStage);\r\n        const options = {\r\n            method: 'POST',\r\n            body: formData\r\n        };\r\n        fetch(baseURL + \"/createCandidature\", options);\r\n\r\n    }\r\n\r\n    async put(candidature,id){\r\n        fetch(baseURL + \"/update/\"+id,\r\n            {method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(candidature)} )\r\n            .then(r => r.json());\r\n    }\r\n}\r\n\r\nexport default new CandidatureService()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport StageService from '../service/StageService';\r\nimport EtudiantService from \"../service/EtudiantService\";\r\nimport CandidatureService from \"../service/CandidatureService\";\r\n\r\nexport default class ApplicationStageComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stages: [],\r\n            etudiant: \"\",\r\n            hasValidCV: false,\r\n            hasApplied:\"\"\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var id;\r\n        if (localStorage.getItem(\"desc\") == \"Etudiant\")\r\n            id = localStorage.getItem(\"id\");\r\n        const {data: etudiant} = await EtudiantService.getEtudiantById(id);\r\n        this.setState({etudiant: etudiant});\r\n        StageService.getStagesEtudiant(id).then((res) => { this.setState({ stages: res.data }) })\r\n        if (this.state.etudiant.cv == undefined){\r\n            this.setState({ hasValidCV: false});\r\n        }\r\n        else {\r\n            if (this.state.etudiant.cv.status == 'APPROVED'){\r\n                this.setState({ hasValidCV: true});\r\n            }\r\n            else {\r\n                this.setState({ hasValidCV: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        var idEtudiant;\r\n        if (localStorage.getItem(\"desc\") == \"Etudiant\")\r\n            idEtudiant = localStorage.getItem(\"id\");\r\n        var idStage = event.target.value\r\n        this.setState({hasApplied: true});\r\n        CandidatureService.post(idEtudiant, idStage)\r\n        setTimeout(function() {\r\n            window.location.reload();\r\n        }, 1000);\r\n    }\r\n    displayWarningMessage() {\r\n        if(this.state.stages.length != 0){\r\n            if (this.state.etudiant.cv == null)\r\n                return <label>Vous ne pourrez pas postuler si vous n'avez pas de CV.</label>\r\n            if (!this.state.hasValidCV)\r\n                return <label>Vous ne pourrez pas postuler si votre CV n'a pas été approuvé.</label>\r\n        }\r\n        else {\r\n                return <label>Aucune offre de stage n'est disponible pour vous.</label>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"d-flex flex-column\">\r\n            <div className=\"container\">\r\n                <div className=\"col\">\r\n                    <div className=\"pt-3 mt-3\">\r\n                        <h5 className=\"card-title text-center p-3\" style={{ background: '#E3F9F0 ' }}>Offres de stage</h5>\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                <tr >\r\n                                    <th> Titre </th>\r\n                                    <th> Programme </th>\r\n                                    <th> Description </th>\r\n                                    <th> Date de début </th>\r\n                                    <th> Date finale </th>\r\n                                    <th> Ville </th>\r\n                                    <th> Nombre d'heures par semaine </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {this.state.stages.map(\r\n                                    stage =>\r\n                                        <tr key={stage.id}>\r\n                                            <td>{stage.titre}</td>\r\n                                            <td>{stage.programme}</td>\r\n                                            <td>{stage.description}</td>\r\n                                            <td>{stage.dateDebut}</td>\r\n                                            <td>{stage.dateFin}</td>\r\n                                            <td>{stage.ville}</td>\r\n                                            <td>{stage.nbHeuresParSemaine}</td>\r\n                                            {this.state.hasValidCV ?\r\n                                                <td>\r\n                                                    <button type=\"submit\" className=\"btn btn-primary\" value={stage.id} onClick={this.handleSubmit}>Postuler</button>\r\n                                                </td> : null\r\n                                            }\r\n                                        </tr>\r\n                                )}\r\n                                </tbody>\r\n                            </table>\r\n                            {(this.displayWarningMessage())}<br/>\r\n\r\n                            {this.state.hasApplied? <label style={{color: \"green\"}}>Vous venez de postuler au stage</label>: null}<br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport StageService from '../service/StageService';\r\nimport EtudiantService from \"../service/EtudiantService\";\r\nimport CandidatureService from \"../service/CandidatureService\";\r\n\r\n\r\nexport default class ListeCandidaturesEtudiantComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            candidatures: [],\r\n            employeurId: \"\"\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        //this.onChangeHandler = this.onChangeHandler.bind(this)\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        var id;\r\n        if (localStorage.getItem(\"desc\") == \"Etudiant\")\r\n            id = localStorage.getItem(\"id\");\r\n        const { data: candidatures } = await CandidatureService.getByEtudiant(id);\r\n        this.setState({ candidatures });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        var idEtudiant;\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"d-flex flex-column\">\r\n                <div className=\"container\">\r\n                    <div className=\"col\">\r\n                        <div className=\"pt-3 mt-3\">\r\n                            <h5 className=\"card-title text-center p-3\" style={{ background: '#E3F9F0 ' }}>Vos candidatures</h5>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <table className=\"table table-striped table-bordered\">\r\n                                    <thead>\r\n                                    <tr >\r\n                                        <th> Titre </th>\r\n                                        <th> Programme </th>\r\n                                        <th> Description </th>\r\n                                        <th> Date de début </th>\r\n                                        <th> Date de fin </th>\r\n                                        <th> Ville </th>\r\n                                        <th> Nombre d'heures par semaine </th>\r\n                                        <th> Statut</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {this.state.candidatures.map(\r\n                                        candidature =>\r\n                                            <tr key={candidature.id}>\r\n                                                <td>{candidature.stage.titre}</td>\r\n                                                <td>{candidature.stage.programme}</td>\r\n                                                <td>{candidature.stage.description}</td>\r\n                                                <td>{candidature.stage.dateDebut}</td>\r\n                                                <td>{candidature.stage.dateFin}</td>\r\n                                                <td>{candidature.stage.ville}</td>\r\n                                                <td>{candidature.stage.nbHeuresParSemaine}</td>\r\n                                                <td>{candidature.statut}</td>\r\n                                            </tr>\r\n                                    )}\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport EtudiantService from '../../service/EtudiantService';\r\nimport StageService from '../../service/StageService';\r\nimport Stage from '../../model/Stage';\r\nimport Etudiant from '../../model/Etudiant';\r\n\r\nimport { AiFillCheckCircle, AiFillCloseCircle, AiOutlineCheckCircle, AiOutlineCloseCircle, AiOutlineCheckSquare, AiOutlineCloseSquare } from 'react-icons/ai';\r\n\r\nexport default class SelectionnerEtudiantComponent extends Component {    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { etudiants: [], etudiantsPermis: [], disabledButtons: [], };\r\n        this.addAllEtudiants = this.addAllEtudiants.bind(this);\r\n        this.removeAllEtudiants = this.removeAllEtudiants.bind(this);\r\n        this.confirmerChoix = this.confirmerChoix.bind(this);\r\n        this.annulerChoix = this.annulerChoix.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var stage = new Stage();\r\n        stage = await StageService.getStageById(this.props.match.params.id);\r\n        const { data: etudiants } = await EtudiantService.getEtudiantsByProgramme(stage.data.programme);\r\n        this.setState({ etudiants });\r\n        this.setState({ disabledButtons: new Array(this.state.etudiants.length).fill(false)});\r\n\r\n        const { data: etudiantsPermis } = await StageService.getEtudiantsByStageId(this.props.match.params.id);\r\n        this.setState({ etudiantsPermis });\r\n \r\n        var bouttons = new Array(this.state.etudiants.length).fill(false);\r\n        for(let etudiant of this.state.etudiantsPermis){\r\n            bouttons[etudiant.id] = true;\r\n        }\r\n        this.setState({ disabledButtons: bouttons });\r\n\r\n        const stageEtudiants = [];\r\n        if (this.state.etudiantsPermis !== []) { \r\n            for(let etudiant of this.state.etudiantsPermis){\r\n                stageEtudiants[etudiant.id] = etudiant;\r\n            }\r\n        }\r\n        this.setState({ etudiantsPermis: stageEtudiants });\r\n    }\r\n\r\n    addAllEtudiants(){\r\n        const etudiants = [];\r\n        for(let etudiant of this.state.etudiants){\r\n            etudiants.push(etudiant);\r\n        }\r\n\r\n        var bouttons = new Array(this.state.etudiants.length).fill(false);\r\n        for(let etudiant of this.state.etudiants){\r\n            bouttons[etudiant.id] = true;\r\n        }\r\n        \r\n        this.setState({ disabledButtons: bouttons });\r\n        this.setState({ etudiantsPermis: etudiants });\r\n    }\r\n\r\n    removeAllEtudiants(){\r\n        var bouttons = new Array(this.state.etudiants.length).fill(false);\r\n        for(let etudiant of this.state.etudiants){\r\n            bouttons[etudiant.id] = false;\r\n        }\r\n        \r\n        this.setState({ disabledButtons: bouttons });\r\n        this.setState({ etudiantsPermis: [] });\r\n    }\r\n\r\n    async AddToList(index, param, e) {\r\n        var etudiant = new Etudiant();\r\n            etudiant = await EtudiantService.getEtudiantById(index);\r\n\r\n        this.setState(oldState => {\r\n            const newEtudiantsPermis = [...oldState.etudiantsPermis];\r\n            newEtudiantsPermis[index] = etudiant.data;\r\n            const newDisabledButtons = [...oldState.disabledButtons];\r\n            newDisabledButtons[index] = true;\r\n            return {\r\n                disabledButtons: newDisabledButtons,\r\n                etudiantsPermis: newEtudiantsPermis,\r\n            }\r\n        });\r\n    }\r\n\r\n    async RemoveFromList(index, param, e) {\r\n        var newList = this.state.etudiantsPermis.filter((value) => (value === undefined) ? \"\" : value);\r\n        const updatedList = newList.filter((etudiant) => etudiant.id !== index);\r\n        this.setState(oldState => {\r\n            const newDisabledButtons = [...oldState.disabledButtons];\r\n            newDisabledButtons[index] = false;\r\n            return {\r\n                disabledButtons: newDisabledButtons,\r\n                etudiantsPermis: updatedList,\r\n            }\r\n        });\r\n    }\r\n\r\n    confirmerChoix(){\r\n        StageService.addEtudiants(this.props.match.params.id, this.state.etudiantsPermis);\r\n        this.props.history.push('/gestionnaireStage');\r\n        \r\n        window.location.reload();\r\n    }\r\n\r\n    annulerChoix(){\r\n        this.props.history.push('/gestionnaireStage');\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"pt-3 mt-3\">\r\n                <h5 className=\"card-title text-center p-3\" style={{ background: '#E3F9F0 ' }}>Liste des étudiants</h5>\r\n\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>  \r\n                                    <button className=\"btn btn-primary-outline\" onClick={this.addAllEtudiants}>\r\n                                        <h3> <AiOutlineCheckSquare /> </h3>\r\n                                    </button>\r\n                                    <button className=\"btn btn-primary-outline\" onClick={this.removeAllEtudiants}>\r\n                                        <h3> <AiOutlineCloseSquare /> </h3>\r\n                                    </button>\r\n                                </th>\r\n                                <th> Matricule </th>\r\n                                <th> Nom </th>\r\n                                <th> Prénom </th>\r\n                                <th> Programme </th>\r\n                                <th> Courriel </th>\r\n                                <th> Téléphone </th>\r\n                                <th> Statut </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.etudiants\r\n                                .map(\r\n                                    etudiant =>\r\n                                    <tr key={etudiant.id}>\r\n                                        <td>\r\n                                            <button className=\"btn btn-primary-outline\" onClick={() => this.AddToList(etudiant.id)}\r\n                                                disabled={this.state.disabledButtons[etudiant.id]}>\r\n                                                {!this.state.disabledButtons[etudiant.id] ? \r\n                                                <h3> <AiFillCheckCircle style={{color: \"green\"}}/> </h3> : <h3> <AiOutlineCheckCircle /> </h3>}\r\n                                            </button>\r\n                                            <button className=\"btn btn-primary-outline\" onClick={() => this.RemoveFromList(etudiant.id)}\r\n                                                disabled={!this.state.disabledButtons[etudiant.id]}>\r\n                                                {this.state.disabledButtons[etudiant.id] ? \r\n                                                <h3> <AiFillCloseCircle style={{color: \"red\"}}/> </h3> : <h3> <AiOutlineCloseCircle /> </h3>}\r\n                                            </button>\r\n                                        </td>\r\n                                        <td>{etudiant.matricule}</td>\r\n                                        <td>{etudiant.nom}</td>\r\n                                        <td>{etudiant.prenom}</td>\r\n                                        <td>{etudiant.programme}</td>\r\n                                        <td>{etudiant.email}</td>\r\n                                        <td>{etudiant.telephone}</td>\r\n                                        <td>{etudiant.statutStage}</td>\r\n                                    </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"row\"> \r\n                        <button className=\"btn btn-success\" onClick={this.confirmerChoix}>Confirmer</button>\r\n                        <button className=\"btn btn-danger\" onClick={this.annulerChoix}>Annuler</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component, useState} from 'react';\r\nimport StageService from '../service/StageService';\r\nimport Button from 'react-bootstrap/Button'\r\nimport {Col, Container, Modal, Row} from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport '../css/StageVeto.css';\r\n\r\nexport default class ListStagesComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stage: [],\r\n            showSnackbar: false\r\n        };\r\n\r\n        ShowStage = ShowStage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        StageService.getStages().then((res) => {\r\n            this.setState({stage: res.data})\r\n        })\r\n    }\r\n\r\n    findStage(id) {\r\n        for (let i = 0; i < this.state.stage.length; i++) {\r\n            if (this.state.stage[i].id === id) {\r\n                return this.state.stage[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseSnackbar = () => this.setState({showSnackbar: false});\r\n    handleShowSnackbar = () => this.setState({showSnackbar: true});\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"col\">\r\n                    <div className=\"pt-3 mt-3\">\r\n                        <h5 className=\"card-title text-center p-3\" style={{background: '#E3F9F0 '}}>Stages</h5>\r\n\r\n                        <div className=\"row\">\r\n\r\n                            <table className=\"table table-striped table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th> Titre</th>\r\n                                    <th> Status </th>\r\n                                    <th> Programme</th>\r\n                                    <th> Ville</th>\r\n                                    <th> Détails</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {this.state.stage.map(\r\n                                    stage =>\r\n                                        <tr key={stage.id}>\r\n                                            <ShowStage stage={stage}/>\r\n                                        </tr>\r\n                                )}\r\n                                </tbody>\r\n                            </table>\r\n                            <Snackbar open={this.state.showSnackbar} autoHideDuration={6000}\r\n                                      onClose={this.handleCloseSnackbar}>\r\n                                <Alert onClose={this.handleCloseSnackbar} severity=\"success\">\r\n                                    Changements effectués avec succès\r\n                                </Alert>\r\n                            </Snackbar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ShowStage(props) {\r\n    const approuved = \"APPROVED\";\r\n    const denied = \"DENIED\";\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const handleCloseModal = () => setShowModal(false);\r\n    const handleShowModal = () => setShowModal(true);\r\n\r\n    const handleShowSnackbar = () => this.handleShowSnackbar();\r\n\r\n    function toggleBtns(isApprouved) {\r\n        document.getElementsByName(approuved)[0].disabled = isApprouved\r\n        document.getElementsByName(denied)[0].disabled = !isApprouved\r\n    }\r\n\r\n    async function handleClick(event) {\r\n        event.preventDefault();\r\n\r\n\r\n        console.log(props.stage.employeur)\r\n\r\n        props.stage.statut = event.target.name;\r\n        props.stage.ouvert = event.target.name === approuved;\r\n\r\n        toggleBtns(event.target.name === approuved);\r\n\r\n        await StageService.updateStage(props.stage, parseInt(event.target.value));\r\n\r\n        handleShowSnackbar();\r\n        handleCloseModal();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td>{props.stage.titre}</td>\r\n            <td className={props.stage.statut}>{props.stage.statut}</td>\r\n            <td>{props.stage.programme}</td>\r\n            <td>{props.stage.ville}</td>\r\n            <td><Button onClick={handleShowModal}>Cliquez</Button></td>\r\n\r\n            <Modal\r\n                size=\"lg\"\r\n                show={showModal}\r\n                onHide={handleCloseModal}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {props.stage.titre}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"show-grid\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"font-weight-bold\">Status</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={props.stage.statut}>{props.stage.statut}</Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"font-weight-bold\">Programme</Col>\r\n                            <Col className=\"font-weight-bold\">Ville</Col>\r\n                            <Col className=\"font-weight-bold\"> Employeur</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>{props.stage.programme}</Col>\r\n                            <Col>{props.stage.ville}</Col>\r\n                            <Col>{props.stage.employeur.nom}</Col>\r\n\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"font-weight-bold\">Date de début</Col>\r\n                            <Col className=\"font-weight-bold\">Date de fin</Col>\r\n                            <Col className=\"font-weight-bold\">Date limite pour appliquer</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>{props.stage.dateDebut}</Col>\r\n                            <Col>{props.stage.dateFin}</Col>\r\n                            <Col>{props.stage.dateLimiteCandidature}</Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"font-weight-bold\" xs={6} md={4}>Nombre de places</Col>\r\n                            <Col className=\"font-weight-bold\" xs={6} md={4}>Heures par semaine</Col>\r\n                            <Col className=\"font-weight-bold\" xs={6} md={4}>Salaire</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={6} md={4}>{props.stage.nbAdmis}</Col>\r\n                            <Col xs={6} md={4}>{props.stage.nbHeuresParSemaine}</Col>\r\n                            <Col xs={6} md={4}>{props.stage.salaire}$/h</Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"font-weight-bold\" xs={6} md={4}>Description</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>{props.stage.description}</Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col className=\"font-weight-bold\" xs={6} md={4}>Exigences</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>{props.stage.exigences}</Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button type=\"button\" className=\"btnVeto\" name={approuved}\r\n                            disabled={props.stage.statut === approuved} value={props.stage.id} onClick={handleClick}\r\n                            variant=\"success\">Oui</Button>\r\n                    <Button type=\"button\" className=\"btnVeto\" name={denied} disabled={props.stage.statut === denied}\r\n                            value={props.stage.id} onClick={handleClick} variant=\"danger\">Non</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport EtudiantRegister from \"./components/EtudiantRegister\";\r\nimport Login from \"./components/Login\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from \"./components/Home\";\r\nimport HeaderComponent from \"./components/HeaderComponent\";\r\nimport ListEtudiantsComponent from \"./components/gestionnaire/ListEtudiantComponent\";\r\nimport HomeEtudiant from \"./components/HomeEtudiant\";\r\nimport Register from './components/RegisterComponent';\r\nimport Logout from './components/Logout';\r\nimport CreateStageComponent from './components/stage/CreateStageComponent';\r\nimport GestionnaireOptions from './components/gestionnaire/GestionnaireOptions';\r\nimport GestionnaireListStageComponent from './components/gestionnaire/GestionnaireListeStageComponent';\r\nimport ListStagesEmployeur from './components/employeur/ListStagesEmployeur';\r\nimport ApplicationStageComponent from \"./components/ApplicationStageComponent\";\r\nimport ListeCandidaturesEtudiantComponent from './components/ListeCandidaturesEtudiantComponent';\r\nimport SelectionnerEtudiantComponent from './components/gestionnaire/SelectionnerEtudiantComponent';\r\nimport StageVeto from \"./components/StageVeto\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n      <main>\r\n        <HeaderComponent />\r\n        <div className=\"container\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home}/>\r\n          <Route path=\"/stages\" component={ListStagesEmployeur}/>\r\n          <Route path='/create' component={EtudiantRegister} />\r\n          <Route path='/login' component={Login} />\r\n          <Route path='/register' component={Register} />\r\n          <Route path='/logout' component={Logout} />\r\n          <Route path=\"/etudiants\" component={ListEtudiantsComponent}/>\r\n          <Route path='/stageVeto' component={StageVeto} />\r\n          <Route path='/etudiant' component={HomeEtudiant} />\r\n          <Route path='/offrestage' component={ApplicationStageComponent} />\r\n          <Route path=\"/etudiants\" component={ListEtudiantsComponent} />\r\n          <Route path='/etudiant' component={HomeEtudiant} />\r\n          <Route path='/createStage' component={CreateStageComponent} />\r\n          <Route path='/listecandidatures' component={ListeCandidaturesEtudiantComponent} />\r\n          <Route path='/gestionnaire' component={GestionnaireOptions} />\r\n          <Route path='/gestionnaireStage' component={GestionnaireListStageComponent} />\r\n          <Route path='/stageSelectEtudiants/:id' component={SelectionnerEtudiantComponent} />\r\n        </Switch>\r\n       \r\n        </div>\r\n      </main>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}